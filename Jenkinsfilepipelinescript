node {
def mavenHome = tool name: "maven3.8.5"  
echo "Jekins url is : ${env.JENKINS_URL} "
echo "Node name  is : ${env.NODE_LABELS} "
echo "Job name  is : ${env.JOB_NAME} "

properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
try{
slacknotification('STARTED')
stage('CheckOutCode'){
git branch: 'development', credentialsId: 'b90e9bbe-7402-42b8-8424-11471f835d16', url: 'https://github.com/santoshkovvada/maven-web-application.git'
  }

stage('Build'){
sh "${mavenHome}/bin/mvn clean package"

}
stage('ExecuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn clean sonar:sonar"
}

stage('UploadArtifactsIntoArtifactoryRepo'){
sh "${mavenHome}/bin/mvn clean deploy"
}
stage('UploadArtifactsIntoArtifactoryRepo'){
sshagent(['f19341b0-47a5-49ea-954a-357ee1d7e3d7']) {
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@35.154.154.118:/opt/apache-tomcat-9.0.65/webapps"   // some block
}
}

}//try block closing
catch(e){
slacknotification(currentBuild.result1)
throw e 
}
finally{
slacknotification(currentBuild.result)
}
}//Node closing
 //Code snippet for sending slack notifications
 def slacknotification(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else { (buildStatus == 'FAILURE')
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
 
